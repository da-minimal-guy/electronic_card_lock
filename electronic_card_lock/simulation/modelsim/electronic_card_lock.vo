// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.1 Build 720 11/11/2020 SJ Standard Edition"

// DATE "11/25/2022 07:26:26"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module electronic_card_lock (
	key_0,
	key_1,
	card_read);
input 	key_0;
input 	key_1;
output 	card_read;

// Design Ports Information
// card_read	=>  Location: PIN_E21,	 I/O Standard: 2.5 V,	 Current Strength: Default
// key_0	=>  Location: PIN_M23,	 I/O Standard: 2.5 V,	 Current Strength: Default
// key_1	=>  Location: PIN_M21,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \card_read~output_o ;
wire \key_0~input_o ;
wire \key_1~input_o ;
wire \card_read$latch~combout ;


hard_block auto_generated_inst(
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

// Location: IOOBUF_X107_Y73_N9
cycloneive_io_obuf \card_read~output (
	.i(\card_read$latch~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\card_read~output_o ),
	.obar());
// synopsys translate_off
defparam \card_read~output .bus_hold = "false";
defparam \card_read~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X115_Y40_N8
cycloneive_io_ibuf \key_0~input (
	.i(key_0),
	.ibar(gnd),
	.o(\key_0~input_o ));
// synopsys translate_off
defparam \key_0~input .bus_hold = "false";
defparam \key_0~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X115_Y53_N15
cycloneive_io_ibuf \key_1~input (
	.i(key_1),
	.ibar(gnd),
	.o(\key_1~input_o ));
// synopsys translate_off
defparam \key_1~input .bus_hold = "false";
defparam \key_1~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X114_Y53_N16
cycloneive_lcell_comb card_read$latch(
// Equation(s):
// \card_read$latch~combout  = (\key_0~input_o  & ((\card_read$latch~combout ) # (!\key_1~input_o )))

	.dataa(gnd),
	.datab(\key_0~input_o ),
	.datac(\key_1~input_o ),
	.datad(\card_read$latch~combout ),
	.cin(gnd),
	.combout(\card_read$latch~combout ),
	.cout());
// synopsys translate_off
defparam card_read$latch.lut_mask = 16'hCC0C;
defparam card_read$latch.sum_lutc_input = "datac";
// synopsys translate_on

assign card_read = \card_read~output_o ;

endmodule

module hard_block (

	devpor,
	devclrn,
	devoe);

// Design Ports Information
// ~ALTERA_ASDO_DATA1~	=>  Location: PIN_F4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_FLASH_nCE_nCSO~	=>  Location: PIN_E2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DCLK~	=>  Location: PIN_P3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DATA0~	=>  Location: PIN_N7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_nCEO~	=>  Location: PIN_P28,	 I/O Standard: 2.5 V,	 Current Strength: 8mA

input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

wire \~ALTERA_ASDO_DATA1~~padout ;
wire \~ALTERA_FLASH_nCE_nCSO~~padout ;
wire \~ALTERA_DATA0~~padout ;
wire \~ALTERA_ASDO_DATA1~~ibuf_o ;
wire \~ALTERA_FLASH_nCE_nCSO~~ibuf_o ;
wire \~ALTERA_DATA0~~ibuf_o ;


endmodule
